<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://java.sun.com/jsp/jstl/core">
<head>
   <link type="text/css" rel="stylesheet" href="css/profilepage.css"/>
   <title>My Profile | Hospital Appointment System</title>
   <link rel="shortcut icon" type="image/x-icon" href="assets/favicon.ico" />
   <script src="scripts/sidebar.js" type="text/javascript"></script>
   <script src="scripts/profilepage.js" type="text/javascript"></script>
</head>
<h:head>
   <f:metadata>
      <f:event listener="#{userRedirectionBean.checkLoggedIn}" type="preRenderView"/>
   </f:metadata>
</h:head>
<h:body styleClass="body">
   <h:form>
      <div id="mySidebar" class="sidebar">
         <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
         <a href="index.xhtml">Home</a>
         <a href="myprofile.xhtml">My Profile</a>
         <a href="login.xhtml" style="display: #{loginBean.signupDisplay}">Sign In</a>
         <a href="signup.xhtml" style="display: #{loginBean.signupDisplay}">Sign Up</a>
         <h:commandLink value="Log Out" action="#{loginBean.logout}" rendered="#{loginBean.loggedIn}"/>
         <h:commandLink value="Admin" action="admin.xhtml" rendered="#{loginBean.isAdmin()}"/>
      </div>
   </h:form>
   <div class="navbar">
      <a class="link" href="index.xhtml">Home</a>
      <a class="link" href="make-appointment.xhtml">Appointment</a>
      <a class="push"/>
      <a class="profile active" href="myprofile.xhtml">
         <img src="assets/profile-icon.png" alt="My Profile"/>
      </a>
      <div id="main">
         <button class="openbtn" onclick="openNav()">&#9776;</button>
      </div>
   </div>
   <div class="container">
      <div class="main-body">
         <h:outputText styleClass="welcome-label" value="Hello, #{profileDataBean.firstName}!"/>
         <h:form>
            <h:panelGrid columns="3">
               <h:outputText value="ID: "/>
               <h:inputText value="#{profileDataBean.id}" readonly="true"
                            styleClass="readonly" autocomplete="false"/>
               <label/> <!-- place holder for the 3rd column -->

               <h:outputText value="First Name: "/>
               <h:inputText id="firstNameInput" value="#{profileDataBean.firstName}"
                            readonly="#{profileDataBean.isUser() || profileDataBean.isPreviewMode()}"
                            autocomplete="off" required="true" requiredMessage="You have to provide a first name"
                            validatorMessage="A first name can only include english letters"
                            styleClass="#{profileDataBean.getStyleClass(!(profileDataBean.isUser() || profileDataBean.isPreviewMode()))}">
                  <f:validateRegex pattern="^[a-zA-Z]+$"/>
               </h:inputText>
               <h:message for="firstNameInput" styleClass="error" value=""/>

               <h:outputText value="Last Name: "/>
               <h:inputText id="lastNameInput" value="#{profileDataBean.lastName}"
                            readonly="#{profileDataBean.isUser() || profileDataBean.isPreviewMode()}"
                            required="true" requiredMessage="You have to provude a last name"
                            autocomplete="off" validatorMessage="A last name can only include english letters"
                            styleClass="#{profileDataBean.getStyleClass(!(profileDataBean.isUser() || profileDataBean.isPreviewMode()))}">
                  <f:validateRegex pattern="^[a-zA-Z]+$"/>
               </h:inputText>
               <h:message for="lastNameInput" styleClass="error" value="A name can only include english letters"/>

               <h:outputText value="Birth Date: "/>
               <h:inputText id="birthDateInput" converter="dateConverter" value="#{profileDataBean.birthDate}"
                            readonly="#{profileDataBean.isUser() || profileDataBean.isPreviewMode()}"
                            autocomplete="off"
                            required="true" requiredMessage="You have to provide a birth date"
                            validatorMessage="The provided birth date is of incorrect format, in the future, or too old"
                            styleClass="#{profileDataBean.getStyleClass(!(profileDataBean.isUser() || profileDataBean.isPreviewMode()))}">
                  <f:validator validatorId="birthDateValidator"/>
               </h:inputText>
               <h:message for="birthDateInput" styleClass="error"/>

               <h:outputText value="Phone Number: "/>
               <h:inputText id="phoneNumberInput" value="#{profileDataBean.phoneNumber}"
                            readonly="#{profileDataBean.isPreviewMode()}"
                            autocomplete="off" required="true" requiredMessage="You have to provide a phone number"
                            validatorMessage="The provided phone number is of incorrect format"
                            styleClass="#{profileDataBean.getStyleClass(!profileDataBean.isPreviewMode())}">
                  <f:validateRegex pattern="^(\d{3}-\d{3}-\d{4})$"/>
               </h:inputText>
               <h:message for="phoneNumberInput" styleClass="error"/>

               <h:outputText value="Email: "/>
               <h:inputText id="emailInput" value="#{profileDataBean.email}"
                            readonly="#{profileDataBean.isPreviewMode()}"
                            autocomplete="off" required="true" requiredMessage="You have to provide an email address"
                            validatorMessage="The provided email address is of incorrect format"
                            styleClass="#{profileDataBean.getStyleClass(!profileDataBean.isPreviewMode())}">
                  <f:validateRegex pattern="^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$"/>
               </h:inputText>
               <h:message for="emailInput" styleClass="error"/>

               <h:outputText value="User type: "/>
               <h:inputText value="#{profileDataBean.isAdminStr()}" readonly="true"
                            styleClass="readonly" autocomplete="false"/>
               <label/> <!-- place holder for the 3rd column -->

               <h:commandButton styleClass="button" id="editButton" value="Edit" action="#{profileDataBean.edit()}"
                                rendered="#{profileDataBean.isPreviewMode()}"/>
               <h:commandButton styleClass="button" id="submitButton" value="Submit" action="#{profileDataBean.submit()}"
                                rendered="#{!profileDataBean.isPreviewMode()}"/>
            </h:panelGrid>
         </h:form>
         <br/>
         <div class="line-separator">
         </div>
         <div class="appointments-container">
            <h:form styleClass="properties-container">
               <div class="property-container">
                  <a class="title-small" style="text-decoration: underline">Dates</a>
                  <a>From:</a>
                  <h:inputText converter="dateConverter"
                               value="#{profileAppointmentsBean.fromDate}"
                               autocomplete="off"/>
                  <a>To:</a>
                  <h:inputText converter="dateConverter"
                               value="#{profileAppointmentsBean.toDate}"
                               autocomplete="off"/>
               </div>
               <div class="property-container">
                  <a class="title-small" style="text-decoration: underline">Doctor</a>
                  <h:selectOneMenu value="#{profileAppointmentsBean.doctorId}">
                     <f:selectItem itemLabel="All" itemValue="All"/>
                     <f:selectItems value="#{profileAppointmentsBean.treatingDoctors}"
                                    var="doctor" itemValue="#{doctor.getId()}"
                                    itemLabel="#{doctor.getFirstName()} #{doctor.getLastName()}"/>
                  </h:selectOneMenu>
               </div>
               <div class="property-container" style="margin-bottom: 0;">
                  <a class="title-small" style="text-decoration: underline">Sort By</a>
                  <h:selectOneMenu value="#{profileAppointmentsBean.sortBy}">
                     <f:selectItem itemLabel="Date" itemValue="Date"/>
                     <f:selectItem itemLabel="Doctor" itemValue="Doctor"/>
                     <f:selectItem itemLabel="Length" itemValue="Length"/>
                  </h:selectOneMenu>
                  <div class="switch-button-container" style="margin-left: -5px;">
                     <div>
                        <h:selectBooleanCheckbox value="#{profileAppointmentsBean.ascending}"
                                                 styleClass="switch-button">
                           <f:ajax event="click" render="ascSwitch"/>
                        </h:selectBooleanCheckbox>
                     </div>
                     <h:outputText styleClass="switch-button-output" style="margin-top: 2px" id="ascSwitch"
                                   value="#{profileAppointmentsBean.ascending ? 'Asc⬆' : 'Des⬇'}"/>
                  </div>
               </div>
               <div class="property-container" style="margin-bottom: 0;">
                  <a class="title-small" style="text-decoration: underline">Status</a>
                  <div>
                     <h:selectBooleanCheckbox value="#{profileAppointmentsBean.includeCancelled}"/>
                     <a style="font-size: 12px; margin: 0 1px 1px 0"> Cancelled</a>
                  </div>
               </div>
               <div class="line-separator">
               </div>
               <h:commandButton styleClass="button" value="Search" action="#{profileAppointmentsBean.search()}"/>
            </h:form>
            <div class="card-list">
               <ui:repeat value="#{profileAppointmentsBean.appointments}" var="app">
                  <div style="margin: 10px; overflow-x: hidden">
                     <div class="card #{app.isCancelled() ? ' cancelled' : app.past ? ' past' : ''}">
                        <div class="card-content">
                           <a class="title-small">
                              #{app.titleForPatient}
                           </a>
                           <div style="display: flex; flex-direction: row;">
                              <a class="text-small">
                                 #{app.description == null ? 'No description' : app.description}
                              </a>
                              <div style="margin-left: auto; display: flex; flex-direction: row">
                                 <p:commandLink action="#{profileAppointmentsBean.onCancelAppointment(app)}"
                                                rendered="#{app.cancellable}">
                                    <p:graphicImage value="assets/cancel-icon.png" styleClass="download-button"
                                                    style="margin-right: 2px"/>
                                 </p:commandLink>
                                 <input src="assets/download-icon.png" class="download-button" type="image"
                                        onclick="downloadAppointment('#{profileAppointmentsBean.appToId(app)}')"
                                        alt=""/>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
               </ui:repeat>
               <!--Dialog for cancelling appointments-->
               <p:dialog modal="true" id="appCancelDialog" widgetVar="appCancelDialog" header="Cancel Appointment"
                         resizable="false" draggable="false">
                  <h:outputText escape="false" value="Are you sure you want to cancel&lt;br /&gt;the appointment with #{profileAppointmentsBean.cancelDoctor}&lt;br /&gt;at #{profileAppointmentsBean.cancelTime}?"/>

                  <p/>
                  <p:commandButton value="Yes" styleClass="button" icon="pi pi-check"
                                   action="#{profileAppointmentsBean.cancelAppointment()}"/>
               </p:dialog>
            </div>
         </div>
         <h:panelGroup styleClass="doctor-segment" rendered="#{loginBean.isDoctor()}">
            <div class="line-separator" style="width: 100%">
            </div>
            <p class="title-medium">Dr. #{profileDoctorBean.lastName}, your upcoming appointments:</p>
            <div class="card-list">
               <c:forEach items="#{profileDoctorBean.upcomingAppointments}" var="app">
                  <div class="card">
                     <div class="card-content">
                        <a class="title-small">
                           #{app.titleForDoctor}
                        </a>
                        <a class="text-small">
                           #{app.description}
                        </a>
                     </div>
                  </div>
               </c:forEach>
            </div>
            <i class="text-small">Note: upcoming appointments are limited to #{profileDoctorBean.maxDoctorAppointments} entries.</i>
         </h:panelGroup>
      </div>
        <div class="line-separator" style="margin: 0">
        </div>
      <div class="footer">
         <a>© 2023 Hospital Appointment System</a><br/>
         <a>Contact Us @ 02-345-6789 or</a><br/>
         <a>Email Us @ clinic@example.com</a><br/>
      </div>
   </div>
</h:body>
</html>
